apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "quakewatch.fullname" . }}
  labels:
    app.kubernetes.io/name: "{{ include "quakewatch.name" . }}"
    helm.sh/chart: "{{ include "quakewatch.chart" . }}"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ include "quakewatch.name" . }}"
      app.kubernetes.io/instance: "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "{{ include "quakewatch.name" . }}"
        app.kubernetes.io/instance: "{{ .Release.Name }}"
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 5000
          env:
            - name: MESSAGE
              valueFrom:
                configMapKeyRef:
                  name: quakewatch-config
                  key: MESSAGE
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: quakewatch-secret
                  key: SECRET_KEY
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: {{ .Values.livenessProbe.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: {{ .Values.readinessProbe.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
